# -*- coding: utf-8 -*-
"""OSS_prj2_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K_Es4-wV1HkMULvfwdM8diDw1ukJ743f
"""

import pandas as pd
from pandas import Series, DataFrame
df = pd.read_csv("2019_kbo_for_kaggle_v2.csv", encoding = "UTF-8")

#1) Print the top 10 players in hits (안타, H), batting average (타율, avg), homerun (홈런, HR), and onbase percentage (출루율, OBP) for each year from 2015 to 2018.
df15 = df[df['year'] == 2015]
df16 = df[df['year'] == 2016]
df17 = df[df['year'] == 2017]
df18 = df[df['year'] == 2018]

print("------------------------------------------------------------------------------------------------------------")
print("------------------------------------------------top10 in H------------------------------------------------")
print("------------------------------------------------------------------------------------------------------------")
print(df15.sort_values(by='H', ascending=False).head(10))
print(df16.sort_values(by='H', ascending=False).head(10))
print(df17.sort_values(by='H', ascending=False).head(10))
print(df18.sort_values(by='H', ascending=False).head(10))
print("------------------------------------------------------------------------------------------------------------")
print("------------------------------------------------top10 in avg------------------------------------------------")
print("------------------------------------------------------------------------------------------------------------")
print(df15.sort_values(by='avg', ascending=False).head(10))
print(df16.sort_values(by='avg', ascending=False).head(10))
print(df17.sort_values(by='avg', ascending=False).head(10))
print(df18.sort_values(by='avg', ascending=False).head(10))
print("------------------------------------------------------------------------------------------------------------")
print("------------------------------------------------top10 in HR------------------------------------------------")
print("------------------------------------------------------------------------------------------------------------")
print(df15.sort_values(by='HR', ascending=False).head(10))
print(df16.sort_values(by='HR', ascending=False).head(10))
print(df17.sort_values(by='HR', ascending=False).head(10))
print(df18.sort_values(by='HR', ascending=False).head(10))
print("------------------------------------------------------------------------------------------------------------")
print("------------------------------------------------top10 in OBP------------------------------------------------")
print("------------------------------------------------------------------------------------------------------------")
print(df15.sort_values(by='OBP', ascending=False).head(10))
print(df16.sort_values(by='OBP', ascending=False).head(10))
print(df17.sort_values(by='OBP', ascending=False).head(10))
print(df18.sort_values(by='OBP', ascending=False).head(10))
print("\n")
print("\n")

#2) Print the player with the highest war (승리 기여도) by position (cp) in 2018.
dfC = df[(df['cp'] == '포수') & (df['year'] == 2018)]
df1B = df[(df['cp'] == '1루수') & (df['year'] == 2018)]
df2B = df[(df['cp'] == '2루수') & (df['year'] == 2018)]
df3B = df[(df['cp'] == '3루수') & (df['year'] == 2018)]
dfSS = df[(df['cp'] == '유격수') & (df['year'] == 2018)]
dfLF = df[(df['cp'] == '좌익수') & (df['year'] == 2018)]
dfCF = df[(df['cp'] == '중견수') & (df['year'] == 2018)]
dfRF = df[(df['cp'] == '우익수') & (df['year'] == 2018)]

print("======포수======")
print(dfC.loc[dfC['war'].idxmax()])
print("======1루수======")
print(df1B.loc[df1B['war'].idxmax()])
print("======2루수======")
print(df2B.loc[df2B['war'].idxmax()])
print("======3루수======")
print(df3B.loc[df3B['war'].idxmax()])
print("======유격수======")
print(dfSS.loc[dfSS['war'].idxmax()])
print("======좌익수======")
print(dfLF.loc[dfLF['war'].idxmax()])
print("======중견수======")
print(dfCF.loc[dfCF['war'].idxmax()])
print("======우익수======")
print(dfRF.loc[dfRF['war'].idxmax()])
print("\n")
print("\n")

#3) Among R (득점), H (안타), HR (홈런), RBI (타점), SB (도루), war (승리 기여도), avg (타율), OBP (출루율), and SLG (장타율), which has the highest correlation with salary (연봉)?
print(df[['R','H','HR','RBI','SB','war','avg','OBP','SLG']].corrwith(df.salary))
print("highest correlation :", df[['R','H','HR','RBI','SB','war','avg','OBP','SLG']].corrwith(df.salary).sort_values(ascending=False).head(1))